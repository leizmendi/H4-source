Option Compare Database   'Use database order for string comparisons
Option Explicit

' From Access 97 Developer's Handbook
' by Litwin, Getz, and Gilbert (Sybex)
' Copyright 1997.  All rights reserved.

'Const adhcPassForm = "frmCalc"
Const adhcPassForm = "frmPassword"
Global gintPasswordOK As Integer
Global gintNivelAcceso As Integer
Global gstrUser As String, gstrAcceso As String

Function PidePassword()
    ' Load frmPassword in dialog mode, and return the
    ' password value at the end of the use session.
    DoCmd.OpenForm FormName:=adhcPassForm, WindowMode:=acDialog
    If isOpen(adhcPassForm) Then
        ' Retrieve the return value,
        ' then close the form.
        PidePassword = Forms(adhcPassForm).txtPassword
        DoCmd.Close acForm, adhcPassForm
    Else
        PidePassword = Null
    End If
End Function

Function IntroPassword()
    Dim strPass1 As String, strPass2 As String, strPass As String
    If gintPasswordOK = False Then
        strPass = Nz(DameValorParam("AplicacionTxtasdasd"), "")
        If strPass <> "" Then
            If strPass <> PidePassword Then Exit Function
        End If
    End If
    DoCmd.OpenForm FormName:=adhcPassForm, WindowMode:=acDialog, OpenArgs:="Introduzca Nueva Contraseña"
    If Not isOpen(adhcPassForm) Then Exit Function
    ' Retrieve the return value,
    ' then close the form.
    strPass1 = Forms(adhcPassForm).txtPassword
    DoCmd.Close acForm, adhcPassForm
    
    DoCmd.OpenForm FormName:=adhcPassForm, WindowMode:=acDialog, OpenArgs:="Confirme Nueva Contraseña"
    If Not isOpen(adhcPassForm) Then Exit Function
    ' Retrieve the return value,
    ' then close the form.
    strPass2 = Forms(adhcPassForm).txtPassword
    DoCmd.Close acForm, adhcPassForm
    If strPass1 = strPass2 Then
        PonValorParam "AplicacionTxtasdasd", strPass1, 10
    End If
    MsgBox "Se modificó la contraseña"
    gintPasswordOK = False
End Function

Private Function isOpen(strName As String, _
 Optional intObjectType As Variant = acForm)
    ' Returns True if strName is open, False otherwise.
    ' Assume the caller wants to know about a form.
    isOpen = (SysCmd(acSysCmdGetObjectState, _
     intObjectType, strName) <> 0)
End Function

Public Function PasswordOK() As Integer
    Dim strPass As String
    If gintPasswordOK Then
        PasswordOK = True
        Exit Function
    End If
    strPass = Nz(DameValorParam("AplicacionTxtasdasd"), "")
    If strPass = "" Then
        PasswordOK = True
        gintPasswordOK = True
        Exit Function
    End If
    If strPass = PidePassword Then
        PasswordOK = True
        gintPasswordOK = True
        Exit Function
    End If
    PasswordOK = False
End Function

Public Function PasswordOK_off() As Integer
    gintPasswordOK = False
    gintNivelAcceso = 0
    gstrUser = ""
    gstrAcceso = ""
End Function


Public Function Acceso() As Integer
    On Error GoTo Error_Acceso
    Dim strUser As String, strPass As String, intNivel As Integer
    Dim rs As Recordset, strSQL As String
    intNivel = 0
    DoCmd.OpenForm "frmAcceso", , , , , acDialog
    If IsOpenForm("frmAcceso") Then
        strUser = Nz(Forms("frmAcceso")("txtUser"), "")
        strPass = Nz(Forms("frmAcceso")("txtPass"), "")
        intNivel = Nz(Forms("frmAcceso")("txtNivel"), 0)
        Select Case Forms("frmAcceso").Tag
            Case "ACCESS"
                If strUser = "" Then
                    intNivel = 0
                Else
                    If Nz(DLookup("VP", "cfgParam", "NP=" & ConComillas("AplicacionTxt" & KRPT(strUser, 1))), "") = KRPT(strPass, 1, 2) Then
                        intNivel = Nz(DLookup("VPlng", "cfgParam", "NP=" & ConComillas("AplicacionTxt" & KRPT(strUser, 1))), 0)
                    Else
                        intNivel = 0
                    End If
                End If
                GoTo Salir_Acceso
            Case "ADD"
                If strUser = "" Then
                    MsgBox "No se añadió usuario/a"
                    intNivel = 0
                Else
                    Set rs = CurrentDb.OpenRecordset("cfgParam", dbOpenDynaset)
                    rs.AddNew
                    rs("NP") = "AplicacionTxt" & KRPT(strUser, 1)
                    rs("VP") = KRPT(strPass, 1, 2)
                    rs("VPlng") = intNivel
                    rs.Update
                    MsgBox "Se añadió El usuario: " & strUser & vbCrLf & "Nivel de acceso: " & intNivel
                End If
                GoTo Salir_Acceso
            Case "DELETE"
                If strUser = "" Then
                    MsgBox "No se borró usuario/a"
                Else
                    If Nz(DLookup("VP", "cfgParam", "NP=" & ConComillas("AplicacionTxt" & KRPT(strUser, 1))), "") = KRPT(strPass, 1, 2) Then
                        strSQL = "DELETE FROM cfgParam WHERE NP=" & ConComillas("AplicacionTxt" & KRPT(strUser, 1))
                        CurrentDb.Execute strSQL, dbFailOnError
                        MsgBox "Se borró El usuario: " & strUser
                    Else
                        MsgBox "No se borró usuario/a"
                    End If
                End If
                intNivel = 0
                GoTo Salir_Acceso
        End Select
    Else
        MsgBox "Se canceló"
    End If
Salir_Acceso:
    Acceso = intNivel
    gintNivelAcceso = intNivel
    DoCmd.Close acForm, "frmAcceso"
    Exit Function
Error_Acceso:
    Select Case Err
        Case Else
            MsgBox "Error en Acceso" & vbCrLf & Err.Description
            Resume Salir_Acceso
    End Select
End Function

Public Function KRPT(strIn As String, intZU As Integer, Optional intKey As Integer = 1) As String
    On Error GoTo Error_KRPT
    Dim i As Integer, strR As String, lngB As Long
    intKey = intKey * Len(strIn)
    intKey = intKey Mod 224
    For i = 1 To Len(strIn)
        If Asc(Mid(strIn, i, 1)) < 48 Then
            MsgBox "Se encontró un carácter no permitido: " & Mid(strIn, i, 1)
            KRPT = ""
            Exit Function
        End If
        If intZU = 1 Then
            lngB = (Asc(Mid(strIn, i, 1)) - 48 + intKey + i) Mod 224
        Else
            lngB = (Asc(Mid(strIn, i, 1)) - 48 - intKey - i + 224) Mod 224
        End If
        strR = strR & Chr(lngB + 48)
    Next i
    KRPT = strR
Salir_KRPT:
    Exit Function
Error_KRPT:
    Select Case Err
        Case Else
            MsgBox "error en KRPT" & vbCrLf & Err.Description
            Resume Salir_KRPT
    End Select
End Function

Public Function AccesoEmpleado(Optional strTitulo As String) As String
    On Error GoTo Error_AccesoEmpleado
    Dim strUser As String, strPass As String, strNivel As String
    Dim rs As Recordset, strSQL As String, strXML As String
    strNivel = 0
    PonXML strXML, "Titulo", strTitulo
    DoCmd.OpenForm "frmAcceso", , , , , acDialog, strXML
    If IsOpenForm("frmAcceso") Then
        strUser = UCase(Nz(Forms("frmAcceso")("txtUser"), ""))
        strPass = Nz(Forms("frmAcceso")("txtPass"), "")
        strNivel = Nz(Forms("frmAcceso")("txtNivel"), 0)
        Select Case Forms("frmAcceso").Tag
            Case "ACCESS"
                If strUser = "" Then 'Or strPass = "" Then
                    strNivel = ""
                    strUser = ""
                    GoTo Salir_AccesoEmpleado
                End If
                If Nz(DLookup("CodBarman", "tbBarm", "CodBarman=" & ConComillas(strUser)), "") = "" Then
                    strNivel = ""
                    strUser = ""
                    GoTo Salir_AccesoEmpleado
                End If
                If Nz(DLookup("Pwd", "tbBarm", "CodBarman=" & ConComillas(strUser)), "") = strPass Then
                    strNivel = "#." & Nz(DLookup("Acceso", "tbBarm", "CodBarman=" & ConComillas(strUser)), "")
                Else
                    strNivel = ""
                    strUser = ""
                    GoTo Salir_AccesoEmpleado
                End If
                GoTo Salir_AccesoEmpleado
            Case Else
                strNivel = 0
                GoTo Salir_AccesoEmpleado
        End Select
    Else
        MsgBox "Se canceló"
    End If
Salir_AccesoEmpleado:
    AccesoEmpleado = strNivel
    gstrAcceso = strNivel
    gstrUser = strUser
    DoCmd.Close acForm, "frmAcceso"
    If gstrUser <> "" And Date - Nz(DLookup("FechaCambioContraseña", "tbBarm", "CodBarman = '" & gstrUser & "'"), 0) > 30 Then
        If NuevaContraseña(gstrUser) = True Then
            MsgBox "Se modificó la contraseña"
        Else
            MsgBox "No se modificó la contraseña, en el próximo acceso del usuario/a se le volverá a solicitar el cambio de contraseña"
        End If
    End If
    'MsgBox "gstrAcceso = " & gstrAcceso & vbCrLf & "strUser = " & strUser
    Exit Function
Error_AccesoEmpleado:
    Select Case Err
        Case Else
            MsgBox "Error en AccesoEmpleado" & vbCrLf & Err.Description
            Resume Salir_AccesoEmpleado
    End Select
End Function

Public Function PermitirAcceso(strClaveAcceso As String, strTipoAcceso As String, Optional intResetUser As Integer = True, Optional strTitulo As String = "") As Integer
    Dim i As Integer
    If intResetUser = True Then
        gstrUser = ""
        gstrAcceso = ""
    End If
Ini:
    If gstrUser = "" Or (InStr(gstrAcceso, "#" & strClaveAcceso) = 0 And InStr(gstrAcceso, "#*") = 0) Then
        i = i + 1
        If gstrAcceso <> "" Then
            MsgBox "El usuario " & gstrUser & " no tiene acceso a " & strTipoAcceso
        End If
        If i < 4 Then
            Call AccesoEmpleado(strTitulo)
            If gstrAcceso <> "0" Then
                GoTo Ini
            Else
                PermitirAcceso = False
            End If
        Else
            PermitirAcceso = False
        End If
    Else
        PermitirAcceso = True
    End If
End Function

Public Function NuevaContraseña(strCodEmp As String) As Integer
    On Error GoTo Error_NuevaContraseña
    Dim strXML As String, strPas1 As String, strPas2 As String, strSQL As String
    PonXML strXML, "CodEmp", strCodEmp
AbrirFormNuevaContraseña:
    DoCmd.OpenForm "frmNuevaContraseña", , , , , acDialog, strXML
    If IsOpenForm("frmNuevaContraseña") Then
        strPas1 = Nz(Forms("frmNuevaContraseña")("txtPass1"), "")
        strPas2 = Nz(Forms("frmNuevaContraseña")("txtPass2"), "")
        DoCmd.Close acForm, "frmNuevaContraseña"
        If strPas1 <> strPas2 Then
            MsgBox "La 2 contraseñas introducidas no coinciden"
            GoTo AbrirFormNuevaContraseña
        End If
        If strPas1 = Nz(DLookup("Pwd", "tbBarm", "CodBarman = '" & strCodEmp & "'"), "") Then
            MsgBox "No se puede repetir la contraseña anterior"
            GoTo AbrirFormNuevaContraseña
        End If
        strSQL = "UPDATE tbBarm SET Pwd = '" & strPas1 & "', FechaCambioContraseña =#" & Format(Date, "yyyy/mm/dd") & "# WHERE CodBarman = '" & strCodEmp & "'"
        CurrentDb.Execute strSQL, dbFailOnError
        NuevaContraseña = True
    End If
Salir_NuevaContraseña:
    DoCmd.Close acForm, "frmAcceso"
    Exit Function
Error_NuevaContraseña:
    Select Case Err
        Case Else
            MsgBox "Error en NuevaContraseña" & vbCrLf & Err.Description
            Resume Salir_NuevaContraseña
    End Select
End Function


Public Function DimeAccesos(vstrAcceso As Variant) As String
    Dim strAcceso As String
    strAcceso = Nz(vstrAcceso, "")
    If InStr(strAcceso, "#*") > 0 Then
        DimeAccesos = "Administrador/a"
        Exit Function
    End If
    Dim rs As Recordset, strR As String
    Set rs = CurrentDb.OpenRecordset("sysZonasAcceso", dbOpenSnapshot)
    While Not rs.EOF
        If InStr(strAcceso, "#" & rs("CodZonaAcceso")) > 0 Then
            strR = strR & rs("ZonaAcceso") & ", "
        End If
        rs.MoveNext
    Wend
    If Len(strR) > 2 Then strR = RecDerTop(strR, 2, 0)
    DimeAccesos = strR
End Function